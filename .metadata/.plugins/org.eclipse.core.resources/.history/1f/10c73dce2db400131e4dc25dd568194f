package Locker;

import java.security.NoSuchAlgorithmException;

import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;

public class Cryptolocker {
	
	protected String msg;
	protected static Cipher cipher = null;
	
	protected byte [] msgBytes;
	protected byte [] cipherBytes;
	protected byte [] decryptBytes;
	
	
	public Cryptolocker(String msg)throws Exception{
		this.msg = msg;
		
		cipher = Cipher.getInstance("AES");
		
	}
	/**
	 * Encrypt a message with a symmetric algorithm
	 * @param secretKey
	 * @throws Exception
	 */
	public void SymmetricEncrypt(SecretKey secretKey) throws Exception{
		msgBytes = msg.getBytes();
		cipher.init(Cipher.ENCRYPT_MODE, secretKey);
		
		cipherBytes = cipher.doFinal(msgBytes);
		String cipherText = new String(cipherBytes,"UTF-8");
		System.out.println("Encrypted Message: " + cipherText);
		
	}
	
	public void SymmetricDecrypt(SecretKey secretKey)throws Exception{
		cipher.init(Cipher.DECRYPT_MODE, secretKey);
		decryptBytes = cipher.doFinal(cipherBytes);
		String decryptedText =  new String(decryptBytes,"UTF-8");
		System.out.println(decryptedText);
	}
	
	public SecretKey generateKey () throws Exception{
		KeyGenerator keyGenerator = KeyGenerator.getInstance("AES");
		keyGenerator.init(128);
		SecretKey secretKey = keyGenerator.generateKey();
		return secretKey;
	}

	public String getMsg() {
		return msg;
	}

	public void setMsg(String msg) {
		this.msg = msg;
	}
	

}
