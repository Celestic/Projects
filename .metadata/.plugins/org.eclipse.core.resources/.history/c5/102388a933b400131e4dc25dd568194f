package Locker;

import java.security.SecureRandom;

import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;

public class AsymmetricCryptoLocker {
	
	Cipher pkCipher;
	Cipher aesCipher;
    SecureRandom AES_Key_Size;

	
	public AsymmetricCryptoLocker() throws Exception{
		// create RSA public key cipher
	    pkCipher = Cipher.getInstance("RSA");
	    // create AES shared key cipher
	    aesCipher = Cipher.getInstance("AES");
	}
	
	public void makeKey() throws Exception {
	    KeyGenerator kgen = KeyGenerator.getInstance("AES");
		kgen.init(AES_Key_Size);
	    SecretKey key = kgen.generateKey();
	    aesKey = key.getEncoded();
	    aeskeySpec = new SecretKeySpec(aesKey, "AES");
	  }

}
